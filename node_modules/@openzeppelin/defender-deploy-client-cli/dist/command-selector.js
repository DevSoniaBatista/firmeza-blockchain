"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const minimist_1 = __importDefault(require("minimist"));
const deploy_1 = require("./commands/deploy");
const propose_upgrade_1 = require("./commands/propose-upgrade");
const get_approval_process_1 = require("./commands/get-approval-process");
const USAGE = 'Usage: npx @openzeppelin/defender-deploy-client-cli <COMMAND> <OPTIONS>';
const DETAILS = `
Performs actions using OpenZeppelin Defender.

Available commands:
  deploy  Deploys a contract.
  proposeUpgrade  Proposes an upgrade.
  getDeployApprovalProcess  Gets the deploy approval process configured for a network.
  getUpgradeApprovalProcess  Gets the upgrade approval process configured for a network.

Run 'npx @openzeppelin/defender-deploy-client-cli <COMMAND> --help' for more information on a command.
`;
async function main(args) {
    const regularArgs = (0, minimist_1.default)(args)._;
    if (regularArgs.length === 0) {
        console.log(USAGE);
        console.log(DETAILS);
    }
    else {
        if (regularArgs[0] === 'deploy') {
            await (0, deploy_1.deploy)(args.slice(1));
        }
        else if (regularArgs[0] === 'proposeUpgrade') {
            await (0, propose_upgrade_1.proposeUpgrade)(args.slice(1));
        }
        else if (regularArgs[0] === 'getDeployApprovalProcess' || regularArgs[0] === 'getUpgradeApprovalProcess') {
            await (0, get_approval_process_1.getApprovalProcess)(regularArgs[0], args.slice(1));
        }
        else {
            throw new Error(`\
Unknown command: ${regularArgs[0]}
Run 'npx @openzeppelin/defender-deploy-client-cli --help' for usage.\
`);
        }
    }
}
exports.main = main;
//# sourceMappingURL=command-selector.js.map